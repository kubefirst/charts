name: kubefirst-rc-publish

on:
  push:
    tags:
      - 'kubefirst-v*-rc*'

env:
  ARGO_NAMESPACE: argo
  ARGO_VERSION: v3.4.1

jobs:
  deliver_rc_chart:
    runs-on: self-hosted
    steps:
      - name: Setup Runner for Argo
        run: |
          cd $HOME
          echo "Install argo"
          # Download the binary
          curl -sLO https://github.com/argoproj/argo-workflows/releases/download/${ARGO_VERSION}/argo-linux-amd64.gz
          # Unzip
          gunzip argo-linux-amd64.gz
          # Make binary executable
          chmod +x argo-linux-amd64
          # Move binary to path
          sudo mv ./argo-linux-amd64 /usr/local/bin/argo
          # Test installation
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - run: echo ${GITHUB_REPOSITORY}
      - run: echo ${GITHUB_REPOSITORY_NAME_PART}
      - run: echo ${GITHUB_SERVER_URL}
      - name: kubefirst-publish-rc-chart
        run: |
          echo "tag version: ${GITHUB_REF_NAME}"
          argo version --short
          argo submit .argo/kubefirst-publish-rc-chart.yaml \
            --generate-name="${GITHUB_REPOSITORY_NAME_PART}-set-rc-versions-${GITHUB_REF_NAME}-" \
            -p appName="${GITHUB_REPOSITORY_NAME_PART}" \
            -p branch="main" \
            -p gitUrlNoProtocol="git@github.com:${GITHUB_REPOSITORY_OWNER_PART_SLUG}" \
            -p prefix="kubefirst-v" \
            -p tag="${GITHUB_REF_NAME}" \
            --wait --log
#! repsonsibility is to get the tag, 
#! parse the chart portion
#! set the chart verison in the kubefirst repo, gitops-template repo, and development in gitops repo 
